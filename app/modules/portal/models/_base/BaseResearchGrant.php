<?php

/**
 * This is the model base class for the table "{{research_grant}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ResearchGrant".
 *
 * Columns in table "{{research_grant}}" available as properties of the model,
 * followed by relations of table "{{research_grant}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $title
 * @property string $letter
 * @property string $starting
 * @property string $ending
 * @property string $date_awarded
 * @property string $grant_amount
 * @property string $proposal
 * @property string $ethics_approval
 * @property string $nacosti_permit
 * @property string $indemnity_deed
 * @property integer $staff_id
 * @property integer $school_id
 * @property integer $faculty_id
 * @property string $date_added
 *
 * @property ResearchGrantClaim[] $researchGrantClaims
 */
abstract class BaseResearchGrant extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{research_grant}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ResearchGrant|ResearchGrants', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, starting, ending, date_awarded, grant_amount, staff_id, school_id, faculty_id, date_added', 'required'),
			array('staff_id, school_id, faculty_id', 'numerical', 'integerOnly'=>true),
			array('grant_amount', 'numerical'),
			array('letter, proposal, nacosti_permit, indemnity_deed', 'file', 'types'=>'pdf','wrongType'=>'Please save the document as PDF','allowEmpty'=>false),
			array('ethics_approval', 'file', 'types'=>'pdf','wrongType'=>'Please save the ethical approval document as PDF','allowEmpty'=>true),
			array('date_awarded,date_added', 'type', 'type' => 'date', 'message' => '{attribute}: is not a valid date! it should be eg 01/01/2020', 'dateFormat' => 'dd/mm/yyyy'),
			array('title, letter, proposal, ethics_approval, nacosti_permit, indemnity_deed', 'length', 'max'=>100),
			array('starting, ending, date_awarded, date_added', 'length', 'max'=>20),
			array('ethics_approval, indemnity_deed', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, letter, starting, ending, date_awarded, grant_amount, proposal, ethics_approval, nacosti_permit, indemnity_deed, staff_id, school_id, faculty_id, date_added', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'researchGrantClaims' => array(self::HAS_MANY, 'ResearchGrantClaim', 'grant_id'),
			'school' => array(self::BELONGS_TO, 'School', 'school_id'),
			'faculty' => array(self::BELONGS_TO, 'Faculty', 'faculty_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Title of the Grant'),
			'letter' => Yii::t('app', 'A Copy of the Letter of Award'),
			'starting' => Yii::t('app', 'Grant Starting From'),
			'ending' => Yii::t('app', 'Grant Ending On'),
			'date_awarded' => Yii::t('app', 'Date Awarded'),
			'grant_amount' => Yii::t('app', 'Grant Amount (in KES equivalent)'),
			'proposal' => Yii::t('app', 'A Copy of Proposal Submitted'),
			'ethics_approval' => Yii::t('app', 'A Copy of Ethics Approval'),
			'nacosti_permit' => Yii::t('app', 'A Copy of NACOSTI Permit'),
			'indemnity_deed' => Yii::t('app', 'A Copy of Indemnity Deed'),
			'staff_id' => Yii::t('app', 'Staff'),
			'school_id' => Yii::t('app', 'Your School'),
			'faculty_id' => Yii::t('app', 'Your Faculty'),
			'date_added' => Yii::t('app', 'Date Added'),
			'researchGrantClaims' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('letter', $this->letter, true);
		$criteria->compare('starting', $this->starting, true);
		$criteria->compare('ending', $this->ending, true);
		$criteria->compare('date_awarded', $this->date_awarded, true);
		$criteria->compare('grant_amount', $this->grant_amount, true);
		$criteria->compare('proposal', $this->proposal, true);
		$criteria->compare('ethics_approval', $this->ethics_approval, true);
		$criteria->compare('nacosti_permit', $this->nacosti_permit, true);
		$criteria->compare('indemnity_deed', $this->indemnity_deed, true);
		$criteria->compare('staff_id', $this->staff_id);
		$criteria->compare('school_id', $this->school_id);
		$criteria->compare('faculty_id', $this->faculty_id);
		$criteria->compare('date_added', $this->date_added, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}