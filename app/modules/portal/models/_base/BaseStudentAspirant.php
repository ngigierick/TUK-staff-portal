<?php

/**
 * This is the model base class for the table "{{student_aspirant}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "StudentAspirant".
 *
 * Columns in table "{{student_aspirant}}" available as properties of the model,
 * followed by relations of table "{{student_aspirant}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $reg_number
 * @property integer $academicyear_id
 * @property string $id_number
 * @property integer $gender_id
 * @property string $surname
 * @property string $firstname
 * @property string $othername
 * @property integer $school_id
 * @property integer $department_id
 * @property string $programme_id
 * @property string $programme_end
 * @property string $mobile
 * @property string $email
 * @property string $photo
 * @property string $ag_id_number
 * @property integer $ag_gender_id
 * @property string $ag_surname
 * @property string $ag_firstname
 * @property string $ag_othername
 * @property integer $ag_school_id
 * @property integer $ag_department_id
 * @property string $ag_programme_id
 * @property string $ag_programme_end
 * @property string $ag_mobile
 * @property string $ag_email
 * @property string $ag_photo
 * @property integer $status
 * @property string $date_modified
 *
 * @property Programme $programme
 * @property Department $department
 * @property School $school
 * @property Gender $gender
 * @property Academicyear $academicyear
 */
abstract class BaseStudentAspirant extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{student_aspirant}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'StudentAspirant|StudentAspirants', $n);
	}

	public static function representingColumn() {
		return 'reg_number';
	}

	public function rules() {
		return array(
			array('reg_number, position_id, academicyear_id, id_number, gender_id, surname, firstname, school_id, department_id, programme_id, programme_end, mobile, email,   status', 'required'),
			array('academicyear_id, gender_id, school_id, department_id, status', 'numerical', 'integerOnly'=>true),
			array('reg_number, surname, firstname, othername, programme_id, programme_end, date_modified', 'length', 'max'=>30),
			array('mobile', 'length', 'max'=>40),
			array('email', 'length', 'max'=>50),
			array('othername, date_modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, reg_number, academicyear_id, id_number, gender_id, surname, firstname, othername, school_id, department_id, programme_id, programme_end, mobile, email, status, date_modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'programme' => array(self::BELONGS_TO, 'Programme', 'programme_id'),
			'ag_programme' => array(self::BELONGS_TO, 'Programme', 'ag_programme_id'),
			'position' => array(self::BELONGS_TO, 'StudentPosition', 'position_id'),
			'department' => array(self::BELONGS_TO, 'Department', 'department_id'),
			'school' => array(self::BELONGS_TO, 'School', 'school_id'),
			'gender' => array(self::BELONGS_TO, 'Gender', 'gender_id'),
			'academicyear' => array(self::BELONGS_TO, 'AcademicYear', 'academicyear_id'),
			'agent' => array(self::HAS_MANY, 'StudentAspirantAgent', 'aspirant_id'),
			
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'position_id' => Yii::t('app', 'Post'),
			'reg_number' => Yii::t('app', 'Reg Number'),
			'academicyear_id' => null,
			'id_number' => Yii::t('app', 'ID Number'),
			'gender_id' => null,
			'surname' => Yii::t('app', 'Surname'),
			'firstname' => Yii::t('app', 'Firstname'),
			'othername' => Yii::t('app', 'Othername'),
			'school_id' => null,
			'department_id' => null,
			'programme_id' => null,
			'programme_end' => Yii::t('app', 'Expected Completion Date'),
			'mobile' => Yii::t('app', 'Mobile'),
			'email' => Yii::t('app', 'Email'),
			'photo' => Yii::t('app', 'Photo'),
			'status' => Yii::t('app', 'Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'programme' => null,
			'department' => null,
			'school' => null,
			'gender' => null,
			'academicyear' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('reg_number', $this->reg_number, true);
		$criteria->compare('academicyear_id', $this->academicyear_id);
		$criteria->compare('id_number', $this->id_number, true);
		$criteria->compare('gender_id', $this->gender_id);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('othername', $this->othername, true);
		$criteria->compare('school_id', $this->school_id);
		$criteria->compare('department_id', $this->department_id);
		$criteria->compare('programme_id', $this->programme_id);
		$criteria->compare('programme_end', $this->programme_end, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('photo', $this->photo, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}