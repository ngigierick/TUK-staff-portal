<?php

/**
 * This is the model base class for the table "{{student}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Student".
 *
 * Columns in table "{{student}}" available as properties of the model,
 * followed by relations of table "{{student}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $reg_number
 * @property string $college_number
 * @property integer $academicyear_id
 * @property integer $semester_id
 * @property integer $title_id
 * @property string $id_number
 * @property string $surname
 * @property string $firstname
 * @property string $othername
 * @property string $programme_id
 * @property string $dob
 * @property integer $gender_id
 * @property integer $marital_status_id
 * @property integer $nationality_id
 * @property integer $county_id
 * @property integer $district_id
 * @property integer $ethnicity_id
 * @property integer $religion_id
 * @property string $postal_address
 * @property string $postcode
 * @property string $town
 * @property string $mobile
 * @property string $email
 * @property string $c_postal_address
 * @property string $c_postcode
 * @property string $c_town
 * @property string $c_mobile
 * @property string $c_email
 * @property string $nok_surname
 * @property string $nok_firstname
 * @property string $nok_othername
 * @property integer $nok_title_id
 * @property integer $nok_relation_id
 * @property string $nok_postal_address
 * @property string $nok_postcode
 * @property string $nok_town
 * @property string $nok_mobile
 * @property string $nok_email
 * @property integer $disability_id
 * @property string $occupation
 * @property string $employer
 * @property string $employer_address
 * @property string $employer_telephone
 * @property string $employer_email
 * @property string $employer_otherinfo
 * @property string $extra_info
 * @property integer $status
 * @property string $date_modified
 * @property string $expected_completion_date
 * @property string $photo
 *
 * @property Academicyear $academicyear
 * @property Semester $semester
 * @property County $county
 * @property District $district
 * @property Answer $disability
 * @property Ethnicity $ethnicity
 * @property Gender $gender
 * @property Maritalstatus $maritalStatus
 * @property Nationality $nationality
 * @property Courseclass $programme
 * @property Religion $religion
 * @property Relationship $nokRelation
 * @property Title $title
 * @property Title $nokTitle
 */
abstract class BaseStudent extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{student}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Student|Students', $n);
	}

	public static function representingColumn() {
		return 'reg_number';
	}

	public function rules() {
		return array(
			array(
			'reg_number, college_number, class_code, academicyear_id, semester_id, title_id, id_number, surname, module_id, firstname, programme_id,  gender_id, marital_status_id, nationality_id, county_id, religion_id, mobile, email, disability_id, status,
			nok_surname, nok_firstname, nok_othername, nok_title_id, nok_relation_id, nok_postal_address, nok_postcode, nok_town, nok_mobile',
			 'required'),
			array('academicyear_id, semester_id, title_id, gender_id, marital_status_id, nationality_id, county_id, district_id, ethnicity_id, religion_id, nok_title_id, nok_relation_id, disability_id, status', 'numerical', 'integerOnly'=>true),
			array('reg_number, college_number, surname, firstname, othername, programme_id, dob, email, c_email, nok_surname, nok_firstname, nok_othername, occupation, employer_telephone, employer_email, date_modified, expected_completion_date', 'length', 'max'=>30),
			array('id_number, town, mobile, c_town, c_mobile, nok_town, nok_mobile', 'length', 'max'=>20),
			array('postal_address, c_postal_address, nok_postal_address, employer_address, employer_otherinfo, extra_info', 'length', 'max'=>200),
			array('postcode, c_postcode, nok_postcode', 'length', 'max'=>15),
			array('nok_email', 'length', 'max'=>40),
			array('employer, photo', 'length', 'max'=>100),
			array('othername, district_id, c_postal_address, c_postcode, c_town, c_mobile, c_email, nok_surname, nok_firstname, nok_othername, nok_title_id, nok_relation_id, nok_postal_address, nok_postcode, nok_town, nok_mobile, nok_email, occupation, employer, employer_address, employer_telephone, employer_email, employer_otherinfo, extra_info, date_modified, expected_completion_date, photo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, reg_number, college_number, academicyear_id, semester_id, title_id, id_number, surname, firstname, othername, programme_id, dob, gender_id, marital_status_id, nationality_id, county_id, district_id, ethnicity_id, religion_id, postal_address, postcode, town, mobile, email, c_postal_address, c_postcode, c_town, c_mobile, c_email, nok_surname, nok_firstname, nok_othername, nok_title_id, nok_relation_id, nok_postal_address, nok_postcode, nok_town, nok_mobile, nok_email, disability_id, occupation, employer, employer_address, employer_telephone, employer_email, employer_otherinfo, extra_info, status, date_modified, expected_completion_date, photo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'academicyear' => array(self::BELONGS_TO, 'AcademicYear', 'academicyear_id'),
			'semester' => array(self::BELONGS_TO, 'Semester', 'semester_id'),
			'county' => array(self::BELONGS_TO, 'County', 'county_id'),
			'district' => array(self::BELONGS_TO, 'District', 'district_id'),
			'disability' => array(self::BELONGS_TO, 'Answer', 'disability_id'),
			'ethnicity' => array(self::BELONGS_TO, 'Ethnicity', 'ethnicity_id'),
			'gender' => array(self::BELONGS_TO, 'Gender', 'gender_id'),
			'maritalStatus' => array(self::BELONGS_TO, 'MaritalStatus', 'marital_status_id'),
			'nationality' => array(self::BELONGS_TO, 'Nationality', 'nationality_id'),
			'programme' => array(self::BELONGS_TO, 'Programme', 'programme_id'),
			'module' => array(self::BELONGS_TO, 'Module', 'module_id'),
			'religion' => array(self::BELONGS_TO, 'Religion', 'religion_id'),
			'nokRelation' => array(self::BELONGS_TO, 'Relationship', 'nok_relation_id'),
			'title' => array(self::BELONGS_TO, 'Title', 'title_id'),
			'thestatus' => array(self::BELONGS_TO, 'StudentStatus', 'status'),
			'nokTitle' => array(self::BELONGS_TO, 'Title', 'nok_title_id'),
			//'totalReceipts'=>array(self::STAT, 'StudentReceipt', 'questionId', 'select' => 'SUM(answerSum.someFieldFromAnswerTableToSum)')
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'reg_number' => Yii::t('app', 'Reg Number'),
			'college_number' => Yii::t('app', 'College Number'),
			'class_code'=> Yii::t('app', 'Class Code'),
			'current_year_of_study'=> Yii::t('app', 'Current Year of Study'),
			'current_sem_of_study'=> Yii::t('app', 'Current Semester of Study'),
			'academicyear_id' => Yii::t('app', 'Acdemic year of admission'),
			'semester_id' => Yii::t('app', 'Academic semester of admission'),
			'title_id' => null,
			'id_number' => Yii::t('app', 'Id Number'),
			'surname' => Yii::t('app', 'Surname'),
			'firstname' => Yii::t('app', 'Firstname'),
			'othername' => Yii::t('app', 'Othername'),
			'programme_id' => null,
			'dob' => Yii::t('app', 'Dob'),
			'gender_id' => null,
			'marital_status_id' => null,
			'nationality_id' => null,
			'county_id' => null,
			'district_id' => null,
			'ethnicity_id' => null,
			'religion_id' => null,
			'postal_address' => Yii::t('app', 'Postal Address'),
			'postcode' => Yii::t('app', 'Postcode'),
			'town' => Yii::t('app', 'Town'),
			'mobile' => Yii::t('app', 'Mobile'),
			'email' => Yii::t('app', 'Email'),
			'c_postal_address' => Yii::t('app', 'Current  Postal Address'),
			'c_postcode' => Yii::t('app', 'Current  Postcode'),
			'c_town' => Yii::t('app', 'Current Town'),
			'c_mobile' => Yii::t('app', 'Current  Mobile'),
			'c_email' => Yii::t('app', 'Current  Email'),
			'nok_surname' => Yii::t('app', 'Next of Kin Surname'),
			'nok_firstname' => Yii::t('app', 'Next of Kin  Firstname'),
			'nok_othername' => Yii::t('app', 'Next of Kin  Othername'),
			'nok_title_id' => null,
			'nok_relation_id' => null,
			'nok_postal_address' => Yii::t('app', 'Next of Kin  Postal Address'),
			'nok_postcode' => Yii::t('app', 'Next of Kin  Postcode'),
			'nok_town' => Yii::t('app', 'Next of Kin  Town'),
			'nok_mobile' => Yii::t('app', 'Next of Kin  Mobile'),
			'nok_email' => Yii::t('app', 'Next of Kin  Email'),
			'disability_id' => Yii::t('app', 'Has any form of disability?'),
			'occupation' => Yii::t('app', 'Occupation'),
			'employer' => Yii::t('app', 'Employer'),
			'employer_address' => Yii::t('app', 'Employer Address'),
			'employer_telephone' => Yii::t('app', 'Employer Telephone'),
			'employer_email' => Yii::t('app', 'Employer Email'),
			'employer_otherinfo' => Yii::t('app', 'Employer Otherinfo'),
			'extra_info' => Yii::t('app', 'Extra Info'),
			'status' => Yii::t('app', 'Student Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'expected_completion_date' => Yii::t('app', 'Expected Completion Date'),
			'photo' => Yii::t('app', 'Photo'),
			'academicyear' => Yii::t('app', 'Acdemic year of admission'),
			'semester' => Yii::t('app', 'Acdemic semester of admission'),
			'county' => null,
			'district' => null,
			'disability' => 'Has any form of disability?',
			'ethnicity' => null,
			'gender' => null,
			'maritalStatus' => null,
			'nationality' => null,
			'programme' => null,
			'religion' => null,
			'nokRelation' => null,
			'title' => null,
			'nokTitle' => null,
			'thestatus'=>'Student Status'
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('reg_number', $this->reg_number, true);
		$criteria->compare('college_number', $this->college_number, true);
		$criteria->compare('class_code', $this->class_code, true);
		$criteria->compare('academicyear_id', $this->academicyear_id);
		$criteria->compare('semester_id', $this->semester_id);
		$criteria->compare('title_id', $this->title_id);
		$criteria->compare('id_number', $this->id_number, true);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('othername', $this->othername, true);
		$criteria->compare('programme_id', $this->programme_id);
		$criteria->compare('dob', $this->dob, true);
		$criteria->compare('gender_id', $this->gender_id);
		$criteria->compare('marital_status_id', $this->marital_status_id);
		$criteria->compare('nationality_id', $this->nationality_id);
		$criteria->compare('county_id', $this->county_id);
		$criteria->compare('district_id', $this->district_id);
		$criteria->compare('ethnicity_id', $this->ethnicity_id);
		$criteria->compare('religion_id', $this->religion_id);
		$criteria->compare('postal_address', $this->postal_address, true);
		$criteria->compare('postcode', $this->postcode, true);
		$criteria->compare('town', $this->town, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('c_postal_address', $this->c_postal_address, true);
		$criteria->compare('c_postcode', $this->c_postcode, true);
		$criteria->compare('c_town', $this->c_town, true);
		$criteria->compare('c_mobile', $this->c_mobile, true);
		$criteria->compare('c_email', $this->c_email, true);
		$criteria->compare('nok_surname', $this->nok_surname, true);
		$criteria->compare('nok_firstname', $this->nok_firstname, true);
		$criteria->compare('nok_othername', $this->nok_othername, true);
		$criteria->compare('nok_title_id', $this->nok_title_id);
		$criteria->compare('nok_relation_id', $this->nok_relation_id);
		$criteria->compare('nok_postal_address', $this->nok_postal_address, true);
		$criteria->compare('nok_postcode', $this->nok_postcode, true);
		$criteria->compare('nok_town', $this->nok_town, true);
		$criteria->compare('nok_mobile', $this->nok_mobile, true);
		$criteria->compare('nok_email', $this->nok_email, true);
		$criteria->compare('disability_id', $this->disability_id);
		$criteria->compare('occupation', $this->occupation, true);
		$criteria->compare('employer', $this->employer, true);
		$criteria->compare('employer_address', $this->employer_address, true);
		$criteria->compare('employer_telephone', $this->employer_telephone, true);
		$criteria->compare('employer_email', $this->employer_email, true);
		$criteria->compare('employer_otherinfo', $this->employer_otherinfo, true);
		$criteria->compare('extra_info', $this->extra_info, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('expected_completion_date', $this->expected_completion_date, true);
		$criteria->compare('photo', $this->photo, true);
		$criteria->order='id DESC';

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination'=>array('pageSize'=>30)
		));
	}
}