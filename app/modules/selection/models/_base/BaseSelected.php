<?php

/**
 * This is the model base class for the table "{{selected}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Selected".
 *
 * Columns in table "{{selected}}" available as properties of the model,
 * followed by relations of table "{{selected}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $app_id
 * @property string $programme_id
 * @property string $date_modified
 * @property string $app_ref
 * @property string $app_reg
 * @property string $date_processed
 * @property integer $processed_id
 * @property integer $status
 *
 * @property Programme $programme
 * @property Applicant $app
 */
abstract class BaseSelected extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{selected}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Selected|Selecteds', $n);
	}

	public static function representingColumn() {
		return 'date_modified';
	}

	public function rules() {
		return array(
			array('app_id, programme_id, date_modified', 'required'),
			array('app_id, processed_id, status', 'numerical', 'integerOnly'=>true),
			array('programme_id, date_modified, app_ref, app_reg, date_processed', 'length', 'max'=>30),
			array('app_ref, app_reg, date_processed, processed_id, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, app_id, programme_id, date_modified, app_ref, app_reg, date_processed, processed_id, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'programme' => array(self::BELONGS_TO, 'Programme', 'programme_id'),
			'app' => array(self::BELONGS_TO, 'Applicant', 'app_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'app_id' => null,
			'programme_id' => null,
			'date_modified' => Yii::t('app', 'Date Modified'),
			'app_ref' => Yii::t('app', 'App Ref'),
			'app_reg' => Yii::t('app', 'App Reg'),
			'date_processed' => Yii::t('app', 'Date Processed'),
			'processed_id' => Yii::t('app', 'Processed'),
			'status' => Yii::t('app', 'Status'),
			'programme' => null,
			'app' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('app_id', $this->app_id);
		$criteria->compare('programme_id', $this->programme_id);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('app_ref', $this->app_ref, true);
		$criteria->compare('app_reg', $this->app_reg, true);
		$criteria->compare('date_processed', $this->date_processed, true);
		$criteria->compare('processed_id', $this->processed_id);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}