<?php

/**
 * This is the model base class for the table "{{employee_statement}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EmployeeStatement".
 *
 * Columns in table "{{employee_statement}}" available as properties of the model,
 * followed by relations of table "{{employee_statement}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $pf_number
 * @property string $statement
 * @property boolean $status
 * @property string $date_modified
 *
 * @property Employee $pfNumber
 */
abstract class BaseEmployeeStatement extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{employee_statement}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EmployeeStatement|EmployeeStatements', $n);
	}

	public static function representingColumn() {
		return 'pf_number';
	}

	public function rules() {
		return array(
			array('pf_number', 'required'),
			array('pf_number, date_modified', 'length', 'max'=>30),
			array('statement', 'length', 'max'=>500),
			array('status', 'safe'),
			array('statement, status, date_modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, pf_number, statement, status, date_modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'pfNumber' => array(self::BELONGS_TO, 'Employee', 'pf_number'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'pf_number' => null,
			'statement' => Yii::t('app', 'Statement'),
			'status' => Yii::t('app', 'Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'pfNumber' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('pf_number', $this->pf_number);
		$criteria->compare('statement', $this->statement, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}