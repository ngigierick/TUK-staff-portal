<?php

/**
 * This is the model base class for the table "{{xemployee}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Xemployee".
 *
 * Columns in table "{{xemployee}}" available as properties of the model,
 * followed by relations of table "{{xemployee}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $title_id
 * @property string $surname
 * @property string $firstname
 * @property string $othername
 * @property integer $gender_id
 * @property string $id_number
 * @property string $pin_number
 * @property string $nssf_number
 * @property string $nhif_number
 * @property string $dob
 * @property string $pf_number
 * @property integer $emp_terms_id
 * @property string $doe
 * @property string $dot
 * @property integer $status
 * @property string $date_modified
 * @property integer $ethnicity_id
 * @property integer $religion_id
 * @property string $password
 * @property integer $highest_qualification_id
 * @property integer $current_designation_id
 *
 * @property Title $title
 * @property Religion $religion
 * @property Gender $gender
 * @property Ethnicity $ethnicity
 * @property EmpTerms $empTerms
 */
abstract class BaseXemployee extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{xemployee}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Xemployee|Xemployees', $n);
	}

	public static function representingColumn() {
		return 'surname';
	}

	public function rules() {
		return array(
			array('reason, dot', 'required'),
			array('title_id, gender_id, emp_terms_id, status, ethnicity_id, religion_id, highest_qualification_id, current_designation_id', 'numerical', 'integerOnly'=>true),
			array('surname, firstname, othername, dob, doe, dot, date_modified', 'length', 'max'=>30),
			array('id_number, pin_number, nssf_number, nhif_number, pf_number', 'length', 'max'=>20),
			array('password', 'length', 'max'=>50),
			array('othername, dot, date_modified, ethnicity_id, religion_id, password, highest_qualification_id, current_designation_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title_id, surname, firstname, othername, gender_id, id_number, pin_number, nssf_number, nhif_number, dob, pf_number, emp_terms_id, doe, dot, status, date_modified, ethnicity_id, religion_id, password, highest_qualification_id, current_designation_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'title' => array(self::BELONGS_TO, 'Title', 'title_id'),
			'religion' => array(self::BELONGS_TO, 'Religion', 'religion_id'),
			'gender' => array(self::BELONGS_TO, 'Gender', 'gender_id'),
			'ethnicity' => array(self::BELONGS_TO, 'Ethnicity', 'ethnicity_id'),
			//'empTerms' => array(self::BELONGS_TO, 'EmpTerms', 'emp_terms_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title_id' => null,
			'surname' => Yii::t('app', 'Surname'),
			'firstname' => Yii::t('app', 'Firstname'),
			'othername' => Yii::t('app', 'Othername'),
			'gender_id' => null,
			'id_number' => Yii::t('app', 'Id Number'),
			'pin_number' => Yii::t('app', 'Pin Number'),
			'nssf_number' => Yii::t('app', 'Nssf Number'),
			'nhif_number' => Yii::t('app', 'Nhif Number'),
			'dob' => Yii::t('app', 'Dob'),
			'pf_number' => Yii::t('app', 'Pf Number'),
			'emp_terms_id' => null,
			'doe' => Yii::t('app', 'Doe'),
			'dot' => Yii::t('app', 'Date of Termination'),
			'doe' => Yii::t('app', 'Date of Employement'),
			'status' => Yii::t('app', 'Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'ethnicity_id' => null,
			'religion_id' => null,
			'password' => Yii::t('app', 'Password'),
			'highest_qualification_id' => Yii::t('app', 'Highest Qualification'),
			'current_designation_id' => Yii::t('app', 'Current Designation'),
			'title' => null,
			'religion' => null,
			'gender' => null,
			'ethnicity' => null,
			'empTerms' => null,
			'reason' => Yii::t('app', 'Reason for Termination'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title_id', $this->title_id);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('othername', $this->othername, true);
		$criteria->compare('gender_id', $this->gender_id);
		$criteria->compare('id_number', $this->id_number, true);
		$criteria->compare('pin_number', $this->pin_number, true);
		$criteria->compare('nssf_number', $this->nssf_number, true);
		$criteria->compare('nhif_number', $this->nhif_number, true);
		$criteria->compare('dob', $this->dob, true);
		$criteria->compare('pf_number', $this->pf_number, true);
		$criteria->compare('emp_terms_id', $this->emp_terms_id);
		$criteria->compare('doe', $this->doe, true);
		$criteria->compare('dot', $this->dot, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('ethnicity_id', $this->ethnicity_id);
		$criteria->compare('religion_id', $this->religion_id);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('highest_qualification_id', $this->highest_qualification_id);
		$criteria->compare('current_designation_id', $this->current_designation_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}