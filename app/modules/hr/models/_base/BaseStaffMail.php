<?php

/**
 * This is the model base class for the table "{{staff_mail}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "StaffMail".
 *
 * Columns in table "{{staff_mail}}" available as properties of the model,
 * followed by relations of table "{{staff_mail}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $staff_id
 * @property string $subject
 * @property string $body
 * @property integer $status_id
 * @property string $date_modified
 * @property string $reply_date
 * @property string $date_created
 * @property integer $parent_id
 * @property integer $sender_id
 *
 * @property Employee $staff
 * @property Employee $sender
 */
abstract class BaseStaffMail extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{staff_mail}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'StaffMail|StaffMails', $n);
	}

	public static function representingColumn() {
		return 'subject';
	}

	public function rules() {
		return array(
			array('staff_id, subject, body, status_id, date_modified, sender_id', 'required'),
			array('staff_id, status_id, parent_id, sender_id, category, item_id', 'numerical', 'integerOnly'=>true),
			array('subject', 'length', 'max'=>1000),
			array('date_modified, reply_date, date_created', 'length', 'max'=>30),
			array('reply_date, date_created, parent_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, staff_id, subject, body, status_id, date_modified, reply_date, date_created, parent_id, sender_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'staff' => array(self::BELONGS_TO, 'Employee', 'staff_id'),
			'sender' => array(self::BELONGS_TO, 'Employee', 'sender_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'staff_id' => null,
			'subject' => Yii::t('app', 'Subject'),
			'body' => Yii::t('app', 'Body'),
			'status_id' => Yii::t('app', 'Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'reply_date' => Yii::t('app', 'Reply Date'),
			'date_created' => Yii::t('app', 'Date Created'),
			'parent_id' => Yii::t('app', 'Parent'),
			'sender_id' => null,
			'staff' => null,
			'sender' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('staff_id', $this->staff_id);
		$criteria->compare('subject', $this->subject, true);
		$criteria->compare('body', $this->body, true);
		$criteria->compare('status_id', $this->status_id);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('reply_date', $this->reply_date, true);
		$criteria->compare('date_created', $this->date_created, true);
		$criteria->compare('parent_id', $this->parent_id);
		$criteria->compare('sender_id', $this->sender_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}