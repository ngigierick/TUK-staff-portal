<?php

/**
 * This is the model base class for the table "{{employee_professional}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EmployeeProfessional".
 *
 * Columns in table "{{employee_professional}}" available as properties of the model,
 * followed by relations of table "{{employee_professional}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $pf_number
 * @property string $title
 * @property string $institution
 * @property boolean $status
 * @property string $date_modified
 *
 * @property Employee $pfNumber
 */
abstract class BaseEmployeeProfessional extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{employee_professional}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Professional Affiliation|Professional Affiliations', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('pf_number, title, institution', 'required'),
			array('pf_number, title, date_modified', 'length', 'max'=>30),
			array('institution', 'length', 'max'=>100),
			array('status', 'safe'),
			array('status, date_modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, pf_number, title, institution, status, date_modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'pfNumber' => array(self::BELONGS_TO, 'Employee', 'pf_number'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'pf_number' => null,
			'title' => Yii::t('app', 'Title'),
			'institution' => Yii::t('app', 'Institution Affiliated'),
			'status' => Yii::t('app', 'Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'pfNumber' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('pf_number', $this->pf_number);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('institution', $this->institution, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}