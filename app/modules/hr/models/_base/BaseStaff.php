<?php

/**
 * This is the model base class for the table "{{staff}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Staff".
 *
 * Columns in table "{{staff}}" available as properties of the model,
 * followed by relations of table "{{staff}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $title_id
 * @property string $surname
 * @property string $firstname
 * @property string $othername
 * @property integer $gender_id
 * @property integer $marital_status_id
 * @property integer $nationality_id
 * @property integer $county_id
 * @property string $id_number
 * @property string $pin_number
 * @property string $designation
 * @property string $dob
 * @property string $pf_number
 * @property integer $emp_terms_id
 * @property integer $grade_id
 * @property string $doe
 * @property string $dot
 * @property integer $office_id
 * @property integer $category_id
 * @property string $postal_address
 * @property string $postcode
 * @property string $town
 * @property string $mobile
 * @property string $email
 * @property integer $status
 * @property string $date_modified
 * @property string $photo
 *
 * @property County $county
 * @property Gender $gender
 * @property Maritalstatus $maritalStatus
 * @property Nationality $nationality
 * @property Title $title
 * @property EmpTerms $empTerms
 * @property Grade $grade
 * @property Office $office
 * @property Claim[] $claims
 * @property Dependant[] $dependants
 */
abstract class BaseStaff extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{staff}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Staff Member|Staff Members', $n);
	}

	public static function representingColumn() {
		return array('surname', 'firstname', 'othername','pf_number');
	}

	public function rules() {
		return array(
			array('title_id, surname, firstname, gender_id, marital_status_id, nationality_id, county_id, id_number, pin_number, dob, pf_number, emp_terms_id, grade_id, doe, office_id, category_id, town, email, status', 'required'),
			array('title_id, gender_id, marital_status_id, nationality_id, county_id, emp_terms_id, grade_id, office_id, category_id, status', 'numerical', 'integerOnly'=>true),
			array('surname, firstname, othername, designation, dob, doe, dot, email, date_modified', 'length', 'max'=>30),
			array('id_number, pin_number, pf_number, town', 'length', 'max'=>20),
			array('postal_address', 'length', 'max'=>200),
			array('postcode, photo', 'length', 'max'=>100),
			array('mobile', 'length', 'max'=>60),
			array('othername, designation, dot, postal_address, postcode, mobile, date_modified, photo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title_id, surname, firstname, othername, gender_id, marital_status_id, nationality_id, county_id, id_number, pin_number, designation, dob, pf_number, emp_terms_id, grade_id, doe, dot, office_id, category_id, postal_address, postcode, town, mobile, email, status, date_modified, photo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'county' => array(self::BELONGS_TO, 'County', 'county_id'),
			'gender' => array(self::BELONGS_TO, 'Gender', 'gender_id'),
			'maritalStatus' => array(self::BELONGS_TO, 'MaritalStatus', 'marital_status_id'),
			'nationality' => array(self::BELONGS_TO, 'Nationality', 'nationality_id'),
			'title' => array(self::BELONGS_TO, 'Title', 'title_id'),
			'empTerms' => array(self::BELONGS_TO, 'EmploymentTerms', 'emp_terms_id'),
			'grade' => array(self::BELONGS_TO, 'Grade', 'grade_id'),
			'office' => array(self::BELONGS_TO, 'Office', 'office_id'),
			'claims' => array(self::HAS_MANY, 'Claim', 'staff_id'),
			'dependants' => array(self::HAS_MANY, 'Dependant', 'staff_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title_id' => null,
			'surname' => Yii::t('app', 'Surname'),
			'firstname' => Yii::t('app', 'First name'),
			'othername' => Yii::t('app', 'Other name(s)'),
			'gender_id' => null,
			'marital_status_id' => null,
			'nationality_id' => null,
			'county_id' => null,
			'id_number' => Yii::t('app', 'ID Number'),
			'pin_number' => Yii::t('app', 'PIN'),
			'designation' => Yii::t('app', 'Designation'),
			'dob' => Yii::t('app', 'Date of birth'),
			'pf_number' => Yii::t('app', 'PF Number'),
			'emp_terms_id' => null,
			'grade_id' => null,
			'doe' => Yii::t('app', 'Date of employment'),
			'dot' => Yii::t('app', 'Date of termination'),
			'office_id' => null,
			'category_id' => Yii::t('app', 'Staff Category'),
			'postal_address' => Yii::t('app', 'Postal Address'),
			'postcode' => Yii::t('app', 'Postcode'),
			'town' => Yii::t('app', 'Town'),
			'mobile' => Yii::t('app', 'Mobile'),
			'email' => Yii::t('app', 'Email'),
			'status' => Yii::t('app', 'Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'photo' => Yii::t('app', 'Photo'),
			'county' => null,
			'gender' => null,
			'maritalStatus' => null,
			'nationality' => null,
			'title' => null,
			'empTerms' => null,
			'grade' => null,
			'office' => null,
			'claims' => null,
			'dependants' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title_id', $this->title_id);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('othername', $this->othername, true);
		$criteria->compare('gender_id', $this->gender_id);
		$criteria->compare('marital_status_id', $this->marital_status_id);
		$criteria->compare('nationality_id', $this->nationality_id);
		$criteria->compare('county_id', $this->county_id);
		$criteria->compare('id_number', $this->id_number, true);
		$criteria->compare('pin_number', $this->pin_number, true);
		$criteria->compare('designation', $this->designation, true);
		$criteria->compare('dob', $this->dob, true);
		$criteria->compare('pf_number', $this->pf_number, true);
		$criteria->compare('emp_terms_id', $this->emp_terms_id);
		$criteria->compare('grade_id', $this->grade_id);
		$criteria->compare('doe', $this->doe, true);
		$criteria->compare('dot', $this->dot, true);
		$criteria->compare('office_id', $this->office_id);
		$criteria->compare('category_id', $this->category_id);
		$criteria->compare('postal_address', $this->postal_address, true);
		$criteria->compare('postcode', $this->postcode, true);
		$criteria->compare('town', $this->town, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('photo', $this->photo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}