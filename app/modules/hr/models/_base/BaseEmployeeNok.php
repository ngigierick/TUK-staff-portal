<?php

/**
 * This is the model base class for the table "{{employee_nok}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EmployeeNok".
 *
 * Columns in table "{{employee_nok}}" available as properties of the model,
 * followed by relations of table "{{employee_nok}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $pf_number
 * @property integer $relationship_id
 * @property string $surname
 * @property string $firstname
 * @property string $othername
 * @property boolean $status
 * @property string $date_modified
 * @property integer $level_id
 *
 * @property Relationship $relationship
 * @property Employee $pfNumber
 * @property EmployeeNokLevel $level
 */
abstract class BaseEmployeeNok extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{employee_nok}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Employee Next of Kin |Employee Next of Kin', $n);
	}

	public static function representingColumn() {
		return 'surname';
	}

	public function rules() {
		return array(
			array('pf_number, relationship_id, surname, firstname', 'required'),
			array('relationship_id, level_id', 'numerical', 'integerOnly'=>true),
			array('pf_number, surname, firstname, othername, mobile, id_number, date_modified', 'length', 'max'=>30),
			array('status', 'safe'),
			array('othername, status, date_modified, level_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, pf_number, place_of_residence, postal_address, postal_code, place_of_residence, place_of_work, relationship_id, surname, firstname, othername, status, date_modified, level_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'relationship' => array(self::BELONGS_TO, 'Relationship', 'relationship_id'),
			'pfNumber' => array(self::BELONGS_TO, 'Employee', 'pf_number'),
			'level' => array(self::BELONGS_TO, 'EmployeeNokLevel', 'level_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'pf_number' => null,
			'relationship_id' => null,
			'surname' => Yii::t('app', 'Surname'),
			'firstname' => Yii::t('app', 'Firstname'),
			'othername' => Yii::t('app', 'Othername'),
			'status' => Yii::t('app', 'Active'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'level_id' => null,
			'relationship' => null,
			'pfNumber' => null,
			'level' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('pf_number', $this->pf_number);
		$criteria->compare('relationship_id', $this->relationship_id);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('othername', $this->othername, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('level_id', $this->level_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}