<?php

/**
 * This is the model base class for the table "{{employee_leave_bf}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EmployeeLeaveBroughtForward".
 *
 * Columns in table "{{employee_leave_bf}}" available as properties of the model,
 * followed by relations of table "{{employee_leave_bf}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $leave_id
 * @property integer $staff_id
 * @property integer $year
 * @property integer $days
 * @property string $date_modified
 *
 * @property Employee $staff
 * @property EmployeeLeave $leave
 */
abstract class BaseEmployeeLeaveBroughtForward extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{employee_leave_bf}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EmployeeLeaveBroughtForward|EmployeeLeaveBroughtForwards', $n);
	}

	public static function representingColumn() {
		return 'date_modified';
	}

	public function rules() {
		return array(
			array('leave_id, staff_id, year, days', 'required'),
			array('leave_id, staff_id, year, days', 'numerical', 'integerOnly'=>true),
			array('date_modified', 'length', 'max'=>30),
			array('date_modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, leave_id, staff_id, year, days, date_modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'staff' => array(self::BELONGS_TO, 'Employee', 'staff_id'),
			'leave' => array(self::BELONGS_TO, 'EmployeeLeave', 'leave_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'leave_id' => null,
			'staff_id' => null,
			'year' => Yii::t('app', 'Year'),
			'days' => Yii::t('app', 'Days'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'staff' => null,
			'leave' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('leave_id', $this->leave_id);
		$criteria->compare('staff_id', $this->staff_id);
		$criteria->compare('year', $this->year);
		$criteria->compare('days', $this->days);
		$criteria->compare('date_modified', $this->date_modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}