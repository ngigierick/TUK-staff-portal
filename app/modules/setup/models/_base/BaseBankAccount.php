<?php

/**
 * This is the model base class for the table "{{bankaccount}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BankAccount".
 *
 * Columns in table "{{bankaccount}}" available as properties of the model,
 * followed by relations of table "{{bankaccount}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $accountnumber
 * @property string $branch
 * @property string $postaladdress
 * @property string $telephone
 * @property string $fax
 *
 * @property Applicationfees[] $applicationfees
 */
abstract class BaseBankAccount extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{bankaccount}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'BankAccount|BankAccounts', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, branch, telephone, fax', 'length', 'max'=>30),
			array('accountnumber', 'length', 'max'=>40),
			array('postaladdress', 'length', 'max'=>255),
			array('name, accountnumber, branch, postaladdress, telephone, fax', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, accountnumber, branch, postaladdress, telephone, fax', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'applicationfees' => array(self::HAS_MANY, 'Applicationfees', 'bank_account_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'accountnumber' => Yii::t('app', 'Accountnumber'),
			'branch' => Yii::t('app', 'Branch'),
			'postaladdress' => Yii::t('app', 'Postaladdress'),
			'telephone' => Yii::t('app', 'Telephone'),
			'fax' => Yii::t('app', 'Fax'),
			'applicationfees' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('accountnumber', $this->accountnumber, true);
		$criteria->compare('branch', $this->branch, true);
		$criteria->compare('postaladdress', $this->postaladdress, true);
		$criteria->compare('telephone', $this->telephone, true);
		$criteria->compare('fax', $this->fax, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}