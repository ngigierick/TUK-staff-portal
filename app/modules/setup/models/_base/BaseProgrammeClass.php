<?php

/**
 * This is the model base class for the table "{{programmeclass}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProgrammeClass".
 *
 * Columns in table "{{programmeclass}}" available as properties of the model,
 * followed by relations of table "{{programmeclass}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $programme_id
 * @property string $code
 * @property integer $module_id
 * @property string $start_year
 * @property string $start_term
 * @property integer $duration
 * @property integer $no_of_terms
 * @property string $pattern
 * @property string $date_modified
 * @property integer $status_id
 *
 * @property Programme $programme
 * @property Module $module
 */
abstract class BaseProgrammeClass extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{programmeclass}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ProgrammeClass|ProgrammeClasses', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, module_id', 'required'),
			array('programme_id, module_id, duration, no_of_terms, status_id', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>255),
			array('code', 'length', 'max'=>20),
			array('start_year, start_term, pattern, date_modified', 'length', 'max'=>30),
			array('programme_id, code, start_year, start_term, duration, no_of_terms, pattern, date_modified, status_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, programme_id, code, module_id, start_year, start_term, duration, no_of_terms, pattern, date_modified, status_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'programme' => array(self::BELONGS_TO, 'Programme', 'programme_id'),
			'module' => array(self::BELONGS_TO, 'Module', 'module_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'programme_id' => null,
			'code' => Yii::t('app', 'Code'),
			'module_id' => null,
			'start_year' => Yii::t('app', 'Start Year'),
			'start_term' => Yii::t('app', 'Start Term'),
			'duration' => Yii::t('app', 'Duration'),
			'no_of_terms' => Yii::t('app', 'No Of Terms'),
			'pattern' => Yii::t('app', 'Pattern'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'status_id' => Yii::t('app', 'Status'),
			'programme' => null,
			'module' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('programme_id', $this->programme_id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('module_id', $this->module_id);
		$criteria->compare('start_year', $this->start_year, true);
		$criteria->compare('start_term', $this->start_term, true);
		$criteria->compare('duration', $this->duration);
		$criteria->compare('no_of_terms', $this->no_of_terms);
		$criteria->compare('pattern', $this->pattern, true);
		$criteria->compare('date_modified', $this->date_modified, true);
		$criteria->compare('status_id', $this->status_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}