<?php

/**
 * This is the model base class for the table "{{previousstudentdebit}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PreviousStudentDebit".
 *
 * Columns in table "{{previousstudentdebit}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $app_number
 * @property string $trans_no
 * @property string $type_
 * @property string $course_yr
 * @property string $reg_fee
 * @property string $caution
 * @property string $union_
 * @property string $sports
 * @property string $maint
 * @property string $medical
 * @property string $tuition
 * @property string $misc
 * @property string $cse_tot
 * @property string $exam
 * @property string $hostel
 * @property string $total
 * @property string $xref
 * @property string $descript
 * @property string $val
 * @property string $date_
 * @property string $luser
 *
 */
abstract class BasePreviousStudentDebit extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{previousstudentdebit}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PreviousStudentDebit|PreviousStudentDebits', $n);
	}

	public static function representingColumn() {
		return 'app_number';
	}

	public function rules() {
		return array(
			array('app_number, trans_no, descript, date_', 'length', 'max'=>20),
			array('type_', 'length', 'max'=>5),
			array('course_yr, reg_fee, caution, union_, sports, maint, medical, tuition, misc, cse_tot, exam, hostel, total, val', 'length', 'max'=>10),
			array('xref, luser', 'length', 'max'=>15),
			array('app_number, trans_no, type_, course_yr, reg_fee, caution, union_, sports, maint, medical, tuition, misc, cse_tot, exam, hostel, total, xref, descript, val, date_, luser', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, app_number, trans_no, type_, course_yr, reg_fee, caution, union_, sports, maint, medical, tuition, misc, cse_tot, exam, hostel, total, xref, descript, val, date_, luser', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			//'student' => array(self::HAS_ONE, 'PreviousStudent', 'app_number'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'app_number' => Yii::t('app', 'App Number'),
			'trans_no' => Yii::t('app', 'Trans No'),
			'type_' => Yii::t('app', 'Type'),
			'course_yr' => Yii::t('app', 'Course Yr'),
			'reg_fee' => Yii::t('app', 'Reg Fee'),
			'caution' => Yii::t('app', 'Caution'),
			'union_' => Yii::t('app', 'Union'),
			'sports' => Yii::t('app', 'Sports'),
			'maint' => Yii::t('app', 'Maint'),
			'medical' => Yii::t('app', 'Medical'),
			'tuition' => Yii::t('app', 'Tuition'),
			'misc' => Yii::t('app', 'Misc'),
			'cse_tot' => Yii::t('app', 'Cse Tot'),
			'exam' => Yii::t('app', 'Exam'),
			'hostel' => Yii::t('app', 'Hostel'),
			'total' => Yii::t('app', 'Total'),
			'xref' => Yii::t('app', 'Xref'),
			'descript' => Yii::t('app', 'Descript'),
			'val' => Yii::t('app', 'Val'),
			'date_' => Yii::t('app', 'Date'),
			'luser' => Yii::t('app', 'Luser'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('app_number', $this->app_number, true);
		$criteria->compare('trans_no', $this->trans_no, true);
		$criteria->compare('type_', $this->type_, true);
		$criteria->compare('course_yr', $this->course_yr, true);
		$criteria->compare('reg_fee', $this->reg_fee, true);
		$criteria->compare('caution', $this->caution, true);
		$criteria->compare('union_', $this->union_, true);
		$criteria->compare('sports', $this->sports, true);
		$criteria->compare('maint', $this->maint, true);
		$criteria->compare('medical', $this->medical, true);
		$criteria->compare('tuition', $this->tuition, true);
		$criteria->compare('misc', $this->misc, true);
		$criteria->compare('cse_tot', $this->cse_tot, true);
		$criteria->compare('exam', $this->exam, true);
		$criteria->compare('hostel', $this->hostel, true);
		$criteria->compare('total', $this->total, true);
		$criteria->compare('xref', $this->xref, true);
		$criteria->compare('descript', $this->descript, true);
		$criteria->compare('val', $this->val, true);
		$criteria->compare('date_', $this->date_, true);
		$criteria->compare('luser', $this->luser, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}