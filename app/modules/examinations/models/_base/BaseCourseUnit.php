<?php

/**
 * This is the model base class for the table "{{course_unit}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CourseUnit".
 *
 * Columns in table "{{course_unit}}" available as properties of the model,
 * followed by relations of table "{{course_unit}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $code
 * @property string $description
 * @property integer $department_id
 * @property integer $status
 * @property string $date_modified
 *
 * @property Score[] $scores
 */
abstract class BaseCourseUnit extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{course_unit}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Course Unit|Course Units', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			
			array('id, name, code, description','required'),
			array('department_id, status', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('code', 'length', 'max'=>20),
			array('description', 'length', 'max'=>100),
			array('date_modified', 'length', 'max'=>30),
			array('name, code, description, department_id, status, date_modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, code, description, department_id, status, date_modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'scores' => array(self::HAS_MANY, 'Score', 'course_unit_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'code' => Yii::t('app', 'Code'),
			'description' => Yii::t('app', 'Description'),
			'department_id' => Yii::t('app', 'Department'),
			'status' => Yii::t('app', 'Status'),
			'date_modified' => Yii::t('app', 'Date Modified'),
			'scores' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('department_id', $this->department_id);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_modified', $this->date_modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}